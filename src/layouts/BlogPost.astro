---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';
import { TITLE, MENU_LINKS, SUBMENU_LINKS } from '../config/header.consts';
import { SITE_TITLE, SITE_LANG  } from '../config/site.consts';

import { getCollection } from "astro:content";


type Posts = Awaited<ReturnType<typeof getCollection>>[0]['data'];





const { title, description, pubDate, updatedDate, heroImage } = Astro.props as Posts;


const json_ld = heroImage ? {
	"@context": "https://schema.org",
	"@type": "Article",
	"headline": title,
	"description": description,
	"datePublished": pubDate,
	"image": new URL(heroImage.src, Astro.site).href,
	"publisher": {
		"@type": "Organization",
		"name": SITE_TITLE,
			"logo": { "@type": "ImageObject", "url": new URL("/logo.png", Astro.site).href},
		},
	}:
	{
	"@context": "https://schema.org",
	"@type": "Article",
	"headline": title,
	"description": description,
	"datePublished": pubDate,
	"publisher": {
		"@type": "Organization",
		"name": SITE_TITLE,
			"logo": { "@type": "ImageObject", "url": new URL("/logo.png", Astro.site).href},
		},
	}

---



<html lang={SITE_LANG}>
	<head>
		<BaseHead 
		title={title} 
		description={description} 
		 />

		<script type="application/ld+json" set:html={JSON.stringify(json_ld)} />

	</head>

	<body>
		<Header title={TITLE} links={MENU_LINKS} submenu={SUBMENU_LINKS} />
		<main class="flex text-light-text dark:text-dark-text flex-col items-center justify-center w-full min-h-screen px-4 py-8 bg-light-bg dark:bg-dark-bg">
			<article class="w-full max-w-[900px] prose dark:prose-invert">
				<div class="hero-image w-full flex justify-center mb-6">
					{heroImage && <Image 
						width={400} 
						height={400}
						alt={title}
						src={heroImage}
						format="webp"
                        quality={75}
                    	loading="lazy"
                        decoding="async" />}
				</div>
				<div>
					<div>
						<div>
							<span>
								Published on{" "}
								{pubDate.toLocaleDateString(
                                        "en-US",
                                        {
                                            year: "numeric",
                                            month: "long",
                                            day: "numeric",
                                        },
                                    )}
							</span>

							{updatedDate && <span>
								Last updated {" "}
								{updatedDate.toLocaleDateString(
                                        "en-US",
                                        {
                                            year: "numeric",
                                            month: "long",
                                            day: "numeric",
                                        },
                                    )}
							</span>}

							
							
							
						</div>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
