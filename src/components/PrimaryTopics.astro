---
interface Props {
  title: string;
  extra_text: string;
  topics: { title: string; text: string }[];
}

const { title, topics, extra_text } = Astro.props as Props;

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'ItemList',
  itemListElement: topics,
  itemListOrder: 'https://schema.org/ItemListOrderAscending',
  name: title,
};
---

<section
  class="w-full flex flex-col items-center justify-center dark:bg-dark-bg gap-10 bg-light-bg"
>
  <h2
    class="text-3xl mt-10 font-bold uppercase text-light-text dark:text-dark-text scroll-animation"
  >
    {title}
  </h2>

  <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-3 w-full max-w-[1200px] px-3">
    {
      topics.map((topic, index) => (
        <article
          class="p-5 transition-all duration-200 shadow-[0_4px_6px_-1px_rgba(0,0,0,0.1)] text-light-text dark:text-dark-text
          hover:shadow-[0_20px_25px_-5px_rgba(0,0,0,0.1)] hover:-translate-y-[4px] scroll-animation bg-light-bg dark:bg-dark-surface/30
         border rounded-xl border-light-surface dark:border-light-surface/40 flex items-center justify-start flex-col gap-3"
        >
          <p class="text-buttons-bg text-3xl font-semibold">{index + 1}</p>
          <p
            class="w-full text-start font-semibold text-[1rem] relative before:absolute before:left-0 before:w-[20%] before:h-[2px]
          before:bg-buttons-bg before:max-w-[30px] before:bottom-[-4px]"
          >
            {topic.title}
          </p>
          <p class="opacity-70">{topic.text}</p>
        </article>
      ))
    }
  </div>

  <p class="my-7 max-w-[600px] text-center px-3 text-light-text/70 dark:text-dark-text/70">
    {extra_text}
  </p>

  <!-- JSONâ€‘LD inline en Astro -->
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd, null, 2)} />
</section>
