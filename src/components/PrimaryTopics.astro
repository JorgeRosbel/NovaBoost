---

interface Props {
    title:string;
    topics:string[]
}

const {title, topics} = Astro.props as Props

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  "name": title,
  "itemListElement": topics.map((topic, idx) => ({
    "@type": "ListItem",
    "position": idx + 1,
    "name": topic,
  })),
};


  

---

<section class="w-full min-h-screen flex flex-col items-center justify-center">
    <h2 class="text-3xl my-10 font-bold uppercase text-light-text dark:text-dark-text">{title}</h2>
    <ul class="py-4 flex flex-col gap-3 max-w-[1200px]">
       {topics.map((topic,index) =>  <li class="flex items-start justify-start gap-5 text-3xl">
            <div class="flex flex-col items-center">
                <span class="p-2 font-semibold bg-dark-surface text-dark-text 
                rounded-full h-10 w-10 flex items-center justify-center dark:bg-buttons-bg/30 dark:text-buttons-bg ">
                    {index + 1}
                    </span>
            <span class={`font-bold ${topics.length - 1 === index && "hidden"} text-light-text dark:text-buttons-bg/30`}>|</span>
            </div>
            <p class="font-[400] text-light-text dark:text-dark-text opacity-85">{topic}</p>
        </li>)}
    </ul>

    <!-- JSONâ€‘LD inline en Astro -->
    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
    
</section>