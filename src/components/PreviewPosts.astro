---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import HeaderLink from "./HeaderLink.astro";

type Posts = Awaited<ReturnType<typeof getCollection>>;

interface Props {
    posts: Posts;
    title: string;
    remove_h1?:boolean
}

const slugify = (s: string) =>
    s
        .toLowerCase()
        .replace(/\s+/g, "-")
        .replace(/[^\w-]/g, "");

const { posts, title,remove_h1 }: Props = Astro.props;


const sortedPosts = [...posts].sort((a, b) => {
  const da = new Date(a.data.pubDate).getTime();
  const db = new Date(b.data.pubDate).getTime();
  return db - da; // newer dates (larger timestamps) come first
});

---

<section
    class="w-full flex flex-col items-center max-w-[1200px] mt-20 min-h-screen text-light-text dark:text-dark-text family"
>
    { remove_h1 ? <h2 class="text-3xl font-bold mb-6 text-center scroll-animation">{title.toUpperCase()}</h2>:
    <h1 class="text-3xl font-bold mb-6 text-center scroll-animation">{title.toUpperCase()}</h1> }
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 w-full  px-4">
        {
            sortedPosts.length === 0 && (
                <li class="col-span-full text-center">
                    <p class="font-semibold">No posts found (:</p>
                </li>
            )
        }
        {
            sortedPosts.map((post) => (
                <article class="group scroll-animation border border-light-text/30 rounded p-3 
                flex flex-col bg-slate-50 dark:bg-dark-surface dark:border-dark-text/30
                shadow-[0_0_10px_rgba(0,0,0,0.2)] dark:shadow-[0_0_10px_rgba(255,255,255,0.2)]">
                    <HeaderLink
                        class="flex flex-col  gap-3 items-center" aria-label={`Read more about ${post.data.title}`}
                        href={`/${post.collection}/` + post.id}
                    >
                        {post.data.heroImage && (
                            <div class="overflow-hidden rounded">
                                <Image
                                    class="group-hover:scale-105 transition-all duration-200"
                                    src={post.data.heroImage}
                                    alt={post.data.title}
                                    widths={[300, 400, 600, 720, 800]}
								    sizes="(max-width: 480px) 100vw, (max-width: 720px) 50vw, (max-width: 1024px) 33vw, 400px"
                                    format="webp"
                                    quality={75}
                                    loading="lazy"
                                    decoding="async"
                                />
                            </div>
                        )}
                        <div class="w-full flex flex-col gap-2 max-w-[400px]">
                            <h2
                                class="font-semibold text-xl transition-all duration-200
                            group-hover:text-blue-600  dark:group-hover:text-buttons-bg"
                            >
                                {post.data.title}
                            </h2>
                            <div class="flex items-center gap-1 text-sm opacity-70 my-1">
                                <time
                                    class="text-sm opacity-90 flex items-center justify-center font-[500]"
                                    datetime="{post.data.pubDate.toISOString()}"
                                    >
                                    <Icon name="mdi:hourglass" />
                                    {post.data.pubDate.toLocaleDateString("en-US", {
                                        year: "numeric",
                                        month: "long",
                                        day: "numeric",
                                    })}
                                    </time>
                                <span class="opacity-90 font-[500]">â€¢</span>
                                <p class="text-sm opacity-90 font-[500]">
                                    {post.collection.toLowerCase()}
                                </p>
                            </div>
                            <h3 class="opacity-80 text-[0.9rem]">{post.data.description}</h3>
                        </div>
                        <div class="flex flex-wrap items-end justify-center py-2 gap-1 w-full h-full">
                            {
                                post.data.tags && post.data.tags.map((tag:string) => {
                                const tagSlug = slugify(tag);
                                return (
                                    <a
                                        class="px-2 py-1 text-xs rounded bg-blue-100 hover:bg-blue-200
                                        dark:bg-buttons-bg/30 dark:hover:bg-buttons-bg/50"
                                        href={`/tags/${tagSlug}/`}
                                    >
                                        {tag}
                                    </a>
                                );
                            })
                            }
                        </div>
                    </HeaderLink>
                </article>
            ))
        }
    </div>
</section>
