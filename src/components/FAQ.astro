---
interface Props {
  title: string;
  elements: { question: string; answer: string }[];
}

const { title, elements } = Astro.props as Props;

// Construimos el JSONâ€‘LD
const faqJsonLd = {
  '@context': 'https://schema.org',
  '@type': 'FAQPage',
  mainEntity: elements.map(item => ({
    '@type': 'Question',
    name: item.question,
    acceptedAnswer: {
      '@type': 'Answer',
      text: item.answer,
    },
  })),
};
---

<section
  class="w-full flex flex-col gap-5 my-8 items-center justify-center py-3 scroll-animation text-light-text dark:text-dark-text px-8 md:px-2"
>
  <h2 class="text-3xl font-bold uppercase text-center">{title}</h2>

  <div
    class="w-full max-w-[1200px] flex flex-col items-center justify-center gap-3 border border-light-text/20 rounded-xl p-3 dark:border-dark-text/20"
  >
    {
      elements.map((item, index) => (
        <details
          class={`w-full max-w-[1200px]  ${index !== elements.length - 1 && 'border-b border-b-light-text/20 dark:border-b-dark-text/20'} `}
        >
          <summary class="cursor-pointer text-2xl text-buttons-bg">
            <strong>{item.question}</strong>
          </summary>
          <p class="px-3 text-2xl bg-dark-surface/2 rounded text-light-text/80 dark:text-dark-text/80">
            {item.answer}
          </p>
        </details>
      ))
    }
  </div>
</section>
<script type="application/ld+json" set:html={JSON.stringify(faqJsonLd, null, 2)} />
